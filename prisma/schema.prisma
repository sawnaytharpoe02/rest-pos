// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id             Int            @id @default(autoincrement())
  name           String
  street         String
  township       String
  city           String
  isArchived     Boolean        @default(false)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  locations      Location[]
  menuCategories MenuCategory[]
  user           User[]
}

model Location {
  id         Int      @id @default(autoincrement())
  name       String
  street     String
  township   String
  city       String
  isArchived Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  companyId  Int
  company    Company  @relation(fields: [companyId], references: [id])
  tables     Table[]
}

model MenuCategory {
  id               Int                @id @default(autoincrement())
  name             String
  isArchived       Boolean            @default(false)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  companyId        Int
  company          Company            @relation(fields: [companyId], references: [id])
  menuCategoryMenu MenuCategoryMenu[]
}

model Menu {
  id                Int                 @id @default(autoincrement())
  name              String
  price             Int                 @default(0)
  description       String?
  assetUrl          String?
  isArchived        Boolean             @default(false)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  menuAddonCategory MenuAddonCategory[]
  menuCategoryMenu  MenuCategoryMenu[]
}

model MenuCategoryMenu {
  id             Int          @id @default(autoincrement())
  menuCategoryId Int
  menuCategory   MenuCategory @relation(fields: [menuCategoryId], references: [id])
  menuId         Int
  menu           Menu         @relation(fields: [menuId], references: [id])
}

model AddonCategory {
  id                Int                 @id @default(autoincrement())
  name              String
  isRequired        Boolean             @default(true)
  isArchived        Boolean             @default(false)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  addons            Addon[]
  menuAddonCategory MenuAddonCategory[]
}

model MenuAddonCategory {
  id              Int           @id @default(autoincrement())
  addonCategoryId Int
  addonCategory   AddonCategory @relation(fields: [addonCategoryId], references: [id])
  menuId          Int
  menu            Menu          @relation(fields: [menuId], references: [id])
}

model Addon {
  id              Int           @id @default(autoincrement())
  name            String
  price           Int           @default(0)
  addonCategoryId Int
  isArchived      Boolean       @default(false)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  addonCategory   AddonCategory @relation(fields: [addonCategoryId], references: [id])
}

model Table {
  id         Int      @id @default(autoincrement())
  name       String
  assetUrl   String
  isArchived Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  locationId Int
  location   Location @relation(fields: [locationId], references: [id])
}

model User {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  name      String?
  companyId Int
  company   Company @relation(fields: [companyId], references: [id])
}
